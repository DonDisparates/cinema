library(ISLR) library(corrplot) library(caret) library(dplyr) library(tree) rm(list=ls()) if(!require(AppliedPredictiveModeling)) install.packages("AppliedPredictiveModeling") library(AppliedPredictiveModeling) if(!require(caret)) install.packages("caret") library(caret) if(!require(MASS)) install.packages ("MASS") library(MASS) if(!require(ipred)) install.packages("ipred") library(ipred) if(!require(kernlab)) install.packages("kernlab") library(kernlab) if(!require(ggplot2)) install.packages("ggplot2") library(ggplot2) if(!require(pROC)) install.packages("pROC") library(pROC) library(DMwR) library(lightgbm) library(caret) library(fastDummies) library(class) if(!require(ISLR)) install.packages("ISLR") library(ISLR) if(!require(caret)) install.packages("caret") library(caret) if(!require(ROCR)) install.packages("ROCR") library(ROCR) if(!require(MASS)) install.packages("MASS") library(MASS) if(!require(pROC)) install.packages("pROC") library(pROC) #Cargar Datos setwd("C:\\Users\\usuario\\Documents\\9° Semestre\\Practicum II") opening = read.csv("Base de Datos Modelo 1 SV.csv", sep=",") dim(opening) names(opening) opening<-opening[,-c(1,2,4,11,13,25,37,41,55,61,63,64,67)] opening$Opening.Weekend.Adj<- replace(opening$Opening.Weekend.Adj,opening$Opening.Weekend.Adj==0, "0_a_5") opening$Opening.Weekend.Adj<- replace(opening$Opening.Weekend.Adj,opening$Opening.Weekend.Adj==5, "5_a_13") opening$Opening.Weekend.Adj<- replace(opening$Opening.Weekend.Adj,opening$Opening.Weekend.Adj==13, "13_a_16") opening$Opening.Weekend.Adj<- replace(opening$Opening.Weekend.Adj,opening$Opening.Weekend.Adj==16, "16_a_19")
opening$Opening.Weekend.Adj<- replace(opening$Opening.Weekend.Adj,opening$Opening.Weekend.Adj==19, "19_a_23") opening$Opening.Weekend.Adj<- replace(opening$Opening.Weekend.Adj,opening$Opening.Weekend.Adj==23, "23_a_28") opening$Opening.Weekend.Adj<- replace(opening$Opening.Weekend.Adj,opening$Opening.Weekend.Adj==28, "28_a_35") opening$Opening.Weekend.Adj<- replace(opening$Opening.Weekend.Adj,opening$Opening.Weekend.Adj==35, "35_a_46") opening$Opening.Weekend.Adj<- replace(opening$Opening.Weekend.Adj,opening$Opening.Weekend.Adj==46, "46_a_72") opening$Opening.Weekend.Adj<- replace(opening$Opening.Weekend.Adj,opening$Opening.Weekend.Adj==72, "más_de_72") #Separar Datos Y <- opening$Opening.Weekend.Adj X <- opening[,-1] trainingRows <- createDataPartition(Y,p=.8,list = FALSE) train.X <- X[trainingRows,] train.Y <- Y[trainingRows] test.X <- X[-trainingRows,] test.Y <- Y[-trainingRows] # KNN set.seed(1) knn.pred=knn(train.X,test.X,train.Y,k=45,prob=FALSE) str(knn.pred) head(cbind(test.Y,knn.pred)) library(caret) confusionMatrix(data=as.factor(knn.pred), reference=as.factor(test.Y)) #Tree tree.opening = tree(as.factor(as.character(train.Y))~., data=train.X) summary(tree.opening) plot(tree.opening) text(tree.opening, pretty=0) tree.opening tree.pred = predict(tree.opening, test.X, type="class") confusionMatrix(as.factor(tree.pred), reference = as.factor(test.Y)) #lightGBM DataBaseLGBM <- opening DataBaseLGBM$Opening.Weekend.Adj <- as.numeric(as.factor(DataBaseLGBM$Opening.Weekend.Adj)) train <- as.matrix(DataBaseLGBM[trainingRows,]) test <- as.matrix(DataBaseLGBM[-trainingRows,])
y_train <- train[,1] y_test <- test[,1] x_train <- train[,-1] x_test <- test[,-1] train_lgb <- lgb.Dataset(x_train,label=y_train) test_lgb <- lgb.Dataset.create.valid(train_lgb,data=x_test,label = y_test) set.seed(123) light_gbn_final <- lgb.train( params = list( objective = "multiclass", metric = "multi_error", max_depth = 2, num_leaves = 3, #2 num_iterations = 200, early_stopping_rounds=20, learning_rate = .4, num_class = 11 ), valids = list(test = test_lgb), data = train_lgb ) yhat_predict_final <- predict(light_gbn_final,x_test, reshape = T) pred <- max.col(yhat_predict_final) - 1 pred<- replace(pred,pred==10, "más_de_72") pred<- replace(pred,pred==8, "46_a_72") pred<- replace(pred,pred==7, "35_a_46") pred<- replace(pred,pred==6, "28_a_35") pred<- replace(pred,pred==5, "23_a_28") pred<- replace(pred,pred==4, "19_a_23") pred<- replace(pred,pred==3, "16_a_19") pred<- replace(pred,pred==2, "13_a_16") pred<- replace(pred,pred==9, "5_a_13") pred<- replace(pred,pred==1, "0_a_5") confusionMatrix(as.factor(pred), reference = as.factor(test.Y)) tree_imp = lgb.importance(light_gbn_final, percentage = T) lgb.plot.importance(tree_imp, measure = "Gain") #Hard Voting HV.prediction = NULL test <- opening[-trainingRows,] for(i in 1:430){ Movie <- test[i,] Movie.X <- Movie[,-1] Movie.Y <- Movie$Opening.Weekend.Adj set.seed(1) knn.prediction = knn(train.X,Movie.X,train.Y,k=45,prob=FALSE) knn.prediction <- as.character(knn.prediction) tree.prediction = predict(tree.opening, Movie.X, type="class") tree.prediction <- as.character(tree.prediction) yhat_prediction_final <- predict(light_gbn_final,as.matrix(Movie.X), reshape = T)
Lgbm.prediction <- max.col(yhat_prediction_final) - 1 Lgbm.prediction<- replace(Lgbm.prediction,Lgbm.prediction==10, "más_de_72") Lgbm.prediction<- replace(Lgbm.prediction,Lgbm.prediction==8, "46_a_72") Lgbm.prediction<- replace(Lgbm.prediction,Lgbm.prediction==7, "35_a_46") Lgbm.prediction<- replace(Lgbm.prediction,Lgbm.prediction==6, "28_a_35") Lgbm.prediction<- replace(Lgbm.prediction,Lgbm.prediction==5, "23_a_28") Lgbm.prediction<- replace(Lgbm.prediction,Lgbm.prediction==4, "19_a_23") Lgbm.prediction<- replace(Lgbm.prediction,Lgbm.prediction==3, "16_a_19") Lgbm.prediction<- replace(Lgbm.prediction,Lgbm.prediction==2, "13_a_16") Lgbm.prediction<- replace(Lgbm.prediction,Lgbm.prediction==9, "5_a_13") Lgbm.prediction<- replace(Lgbm.prediction,Lgbm.prediction==1, "0_a_5") Lgbm.prediction <- as.character(Lgbm.prediction) más_de_72 = 0 de_46_a_72 = 0 de_35_a_46 = 0 de_28_a_35 = 0 de_23_a_28 = 0 de_19_a_23 = 0 de_16_a_19 = 0 de_13_a_16 = 0 de_5_a_13 = 0 de_0_a_5 = 0 ifelse(Lgbm.prediction == "más_de_72", más_de_72 <- más_de_72 + 1, ifelse(Lgbm.prediction == "46_a_72",de_46_a_72 <- de_46_a_72 + 1, ifelse(Lgbm.prediction == "35_a_46",de_35_a_46 <- de_35_a_46 + 1, ifelse(Lgbm.prediction == "28_a_35",de_28_a_35 <- de_28_a_35 + 1, ifelse(Lgbm.prediction == "23_a_28", de_23_a_28 <- de_23_a_28 + 1, ifelse(Lgbm.prediction == "19_a_23", de_19_a_23 <- de_19_a_23 + 1, ifelse(Lgbm.prediction == "16_a_19", de_16_a_19 <- de_16_a_19 + 1, ifelse(Lgbm.prediction == "13_a_16", de_13_a_16 <- de_13_a_16 + 1, ifelse(Lgbm.prediction == "5_a_13", de_5_a_13 <- de_5_a_13 + 1, ifelse(Lgbm.prediction == "0_a_5", de_0_a_5 <- de_0_a_5 + 1,print("??"))))))))))) ifelse(knn.prediction == "más_de_72", más_de_72 <- más_de_72 + 1, ifelse(knn.prediction == "46_a_72",de_46_a_72 <- de_46_a_72 + 1, ifelse(knn.prediction == "35_a_46",de_35_a_46 <- de_35_a_46 + 1, ifelse(knn.prediction == "28_a_35",de_28_a_35 <- de_28_a_35 + 1, ifelse(knn.prediction == "23_a_28", de_23_a_28 <- de_23_a_28 + 1, ifelse(knn.prediction == "19_a_23", de_19_a_23 <- de_19_a_23 + 1, ifelse(knn.prediction == "16_a_19", de_16_a_19 <- de_16_a_19 + 1,ifelse(knn.prediction == "13_a_16", de_13_a_16 <- de_13_a_16 + 1, ifelse(knn.prediction == "5_a_13", de_5_a_13 <- de_5_a_13 + 1, ifelse(knn.prediction == "0_a_5", de_0_a_5 <- de_0_a_5 + 1,print("??"))))))))))) ifelse(tree.prediction == "más_de_72", más_de_72 <- más_de_72 + 1, ifelse(tree.prediction == "46_a_72",de_46_a_72 <- de_46_a_72 + 1, ifelse(tree.prediction == "35_a_46",de_35_a_46 <- de_35_a_46 + 1, ifelse(tree.prediction == "28_a_35",de_28_a_35 <- de_28_a_35 + 1, ifelse(tree.prediction == "23_a_28", de_23_a_28 <- de_23_a_28 + 1, ifelse(tree.prediction == "19_a_23", de_19_a_23 <- de_19_a_23 + 1, ifelse(tree.prediction == "16_a_19", de_16_a_19 <- de_16_a_19 + 1, ifelse(tree.prediction == "13_a_16", de_13_a_16 <- de_13_a_16 + 1, ifelse(tree.prediction == "5_a_13", de_5_a_13 <- de_5_a_13 + 1, ifelse(tree.prediction == "0_a_5", de_0_a_5 <- de_0_a_5 + 1,print("??"))))))))))) answ <- case_when( más_de_72 == 2 | más_de_72 == 3 ~ "más_de_72", de_46_a_72 == 2 | de_46_a_72 == 3 ~ "46_a_72", de_35_a_46 == 2 | de_35_a_46 == 3 ~ "35_a_46", de_28_a_35 == 2 | de_28_a_35 == 3 ~ "28_a_35", de_23_a_28 == 2 | de_23_a_28 == 3 ~ "23_a_28", de_19_a_23 == 2 | de_19_a_23 == 3 ~ "19_a_23", de_16_a_19 == 2 | de_16_a_19 == 3 ~ "16_a_19", de_13_a_16 == 2 | de_13_a_16 == 3 ~ "13_a_16", de_5_a_13 == 2 | de_5_a_13 == 3 ~ "5_a_13", de_0_a_5 == 2 | de_0_a_5 == 3 ~ "0_a_5", ) HV.prediction[i] <- ifelse(is.na(answ), Lgbm.prediction, answ) cat(i, "\n") } conf <- confusionMatrix(as.factor(HV.prediction), reference = as.factor(test.Y)) conf
